//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SeguritasEntities : DbContext
    {
        public SeguritasEntities()
            : base("name=SeguritasEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cliente> Clientes { get; set; }
        public virtual DbSet<ClientesPlane> ClientesPlanes { get; set; }
        public virtual DbSet<Cobertura> Coberturas { get; set; }
        public virtual DbSet<CoberturasPlane> CoberturasPlanes { get; set; }
        public virtual DbSet<Plane> Planes { get; set; }
        public virtual DbSet<PlanesCobertura> PlanesCoberturas { get; set; }
    
        public virtual int ClientesAdd(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClientesAdd", nombreParameter);
        }
    
        public virtual int ClientesDelete(Nullable<int> idClientes)
        {
            var idClientesParameter = idClientes.HasValue ?
                new ObjectParameter("IdClientes", idClientes) :
                new ObjectParameter("IdClientes", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClientesDelete", idClientesParameter);
        }
    
        public virtual ObjectResult<ClientesGetAll_Result> ClientesGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientesGetAll_Result>("ClientesGetAll");
        }
    
        public virtual ObjectResult<ClientesGetById_Result> ClientesGetById(Nullable<int> idClientes)
        {
            var idClientesParameter = idClientes.HasValue ?
                new ObjectParameter("IdClientes", idClientes) :
                new ObjectParameter("IdClientes", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientesGetById_Result>("ClientesGetById", idClientesParameter);
        }
    
        public virtual int ClientesUpdate(Nullable<int> idClientes, string nombre)
        {
            var idClientesParameter = idClientes.HasValue ?
                new ObjectParameter("IdClientes", idClientes) :
                new ObjectParameter("IdClientes", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClientesUpdate", idClientesParameter, nombreParameter);
        }
    }
}
